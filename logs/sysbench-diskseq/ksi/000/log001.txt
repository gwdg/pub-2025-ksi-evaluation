+ set -e
+ set -o pipefail
+ '[' -z /nfs/workloads/kind-slurm-integration/benchmark/ksi/workload-sysbench-diskseq.sh ']'
+ '[' '!' -f /nfs/workloads/kind-slurm-integration/benchmark/ksi/workload-sysbench-diskseq.sh ']'
++ stat -fc %T /sys/fs/cgroup/
+ '[' cgroup2fs = cgroup2fs ']'
+ echo 'cgroups v2 check passed: cgroups v2 is enabled'
cgroups v2 check passed: cgroups v2 is enabled
++ which podman
++ alias
++ eval declare -f
+++ declare -f
++ /usr/bin/which --tty-only --read-alias --read-functions --show-tilde --show-dot podman
+ '[' -x /usr/bin/podman ']'
podman check passed
+ echo 'podman check passed'
++ which kubectl
++ alias
++ eval declare -f
+++ declare -f
++ /usr/bin/which --tty-only --read-alias --read-functions --show-tilde --show-dot kubectl
+ '[' -x /usr/local/bin/kubectl ']'
+ echo 'kubectl check passed'
kubectl check passed
++ which kind
++ alias
++ eval declare -f
+++ declare -f
++ /usr/bin/which --tty-only --read-alias --read-functions --show-tilde --show-dot kind
+ '[' -x /usr/local/bin/kind ']'
+ echo 'kind check passed'
kind check passed
+ '[' -f /etc/os-release ']'
+ . /etc/os-release
++ NAME='CentOS Stream'
++ VERSION=9
++ ID=centos
++ ID_LIKE='rhel fedora'
++ VERSION_ID=9
++ PLATFORM_ID=platform:el9
++ PRETTY_NAME='CentOS Stream 9'
++ ANSI_COLOR='0;31'
++ LOGO=fedora-logo-icon
++ CPE_NAME=cpe:/o:centos:centos:9
++ HOME_URL=https://centos.org/
++ BUG_REPORT_URL=https://bugzilla.redhat.com/
++ REDHAT_SUPPORT_PRODUCT='Red Hat Enterprise Linux 9'
++ REDHAT_SUPPORT_PRODUCT_VERSION='CentOS Stream'
+ echo 'Successfully read /etc/os-release'
Successfully read /etc/os-release
++ uuidgen
++ tr -d -
++ head -c5
+ cluster_name=6dbb1
++ random_unused_port
++ local port
++ (( port=30000 ))
++ (( port<=32767 ))
++ ss -Htan
++ awk '{print $4}'
++ cut -d: -f2
++ grep 30000
++ [[ 1 == 1 ]]
++ echo 30000
++ break
+ : 30000
+ export K8S_PORT=30000
+ K8S_PORT=30000
+ echo K8S_PORT=30000
K8S_PORT=30000
+ trap cleanup EXIT
+ trap cleanup SIGTERM
+ trap cleanup SIGINT
Kind config:
+ echo 'Kind config:'
+ envsubst
kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
nodes:
- role: control-plane
  extraMounts:
  - hostPath: ./
    containerPath: /app
  extraPortMappings:
    - containerPort: 30000
      hostPort: 30000
      # optional: set the bind address on the host
      # 0.0.0.0 is the current default
      listenAddress: "0.0.0.0"
      # optional: set the protocol to one of TCP, UDP, SCTP.
      # TCP is the default
      protocol: TCP
+ [[ CentOS Stream == \C\e\n\t\O\S\ \S\t\r\e\a\m ]]
+ [[ 9 = \8 ]]
+ envsubst
+ KIND_EXPERIMENTAL_PROVIDER=podman
+ kind create cluster --name 6dbb1 --wait 5m --config -
using podman due to KIND_EXPERIMENTAL_PROVIDER
enabling experimental podman provider
Creating cluster "6dbb1" ...
 • Ensuring node image (kindest/node:v1.27.3) 🖼  ...
 ✓ Ensuring node image (kindest/node:v1.27.3) 🖼
 • Preparing nodes 📦   ...
 ✓ Preparing nodes 📦 
 • Writing configuration 📜  ...
 ✓ Writing configuration 📜
 • Starting control-plane 🕹️  ...
 ✓ Starting control-plane 🕹️
 • Installing CNI 🔌  ...
 ✓ Installing CNI 🔌
 • Installing StorageClass 💾  ...
 ✓ Installing StorageClass 💾
 • Waiting ≤ 5m0s for control-plane = Ready ⏳  ...
 ✓ Waiting ≤ 5m0s for control-plane = Ready ⏳
 • Ready after 15s 💚
Set kubectl context to "kind-6dbb1"
You can now use your cluster with:

kubectl cluster-info --context kind-6dbb1

Have a question, bug, or feature request? Let us know! https://kind.sigs.k8s.io/#community 🙂
+ kubectl get nodes --context kind-6dbb1
NAME                  STATUS   ROLES           AGE   VERSION
6dbb1-control-plane   Ready    control-plane   21s   v1.27.3
+ kubectl cluster-info --context kind-6dbb1
[0;32mKubernetes control plane[0m is running at [0;33mhttps://127.0.0.1:35029[0m
[0;32mCoreDNS[0m is running at [0;33mhttps://127.0.0.1:35029/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy[0m

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
+ K8S_CLUSTER_NAME=kind-6dbb1
+ export K8S_CLUSTER_NAME=kind-6dbb1
+ K8S_CLUSTER_NAME=kind-6dbb1
++ kubectl config view -o 'jsonpath={.clusters[?(@.name=='\''kind-6dbb1'\'')].cluster.server}'
+ K8S_CLUSTER_API=https://127.0.0.1:35029
+ export K8S_CLUSTER_API=https://127.0.0.1:35029
+ K8S_CLUSTER_API=https://127.0.0.1:35029
+ kubectl --context kind-6dbb1 create -f -
serviceaccount/admin-user created
+ kubectl --context kind-6dbb1 create -f -
clusterrolebinding.rbac.authorization.k8s.io/admin-user created
++ kubectl --context kind-6dbb1 -n kube-system create token admin-user
+ K8S_CLUSTER_API_TOKEN=eyJhbGciOiJSUzI1NiIsImtpZCI6IlNtdUNJdl9QWUtvMUpobU94VUtzNGtZZjYxVXd5TGFvVXlGZDZ6bV9nRFEifQ.eyJhdWQiOlsiaHR0cHM6Ly9rdWJlcm5ldGVzLmRlZmF1bHQuc3ZjLmNsdXN0ZXIubG9jYWwiXSwiZXhwIjoxNjk5NjMzODE2LCJpYXQiOjE2OTk2MzAyMTYsImlzcyI6Imh0dHBzOi8va3ViZXJuZXRlcy5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsIiwia3ViZXJuZXRlcy5pbyI6eyJuYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsInNlcnZpY2VhY2NvdW50Ijp7Im5hbWUiOiJhZG1pbi11c2VyIiwidWlkIjoiZGRiYmI0MzMtNTNmZS00MjBlLWIxY2QtOTE5YWQ2YTYzYzhhIn19LCJuYmYiOjE2OTk2MzAyMTYsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDprdWJlLXN5c3RlbTphZG1pbi11c2VyIn0.dYuG95DB3MzQCnOPKMt3VbY4ShzTRgv_58vddasOToVJA2k20aRgMnFLY2clMdW2U1AUvWzB6Ldy6RS1rg3Muq9NUsCV1s6MjS-K5LNGyVHC8yL8fpvhc8MwoQPTiRTybQX4DL5sfWoWj2NPQFkaMrvZ2M1VhLeh9Y3BlesmSjyQJFTOaMTfOTlyzF6mEJFpvNxHOqXIb5SUwZN6Kq70xZpDs-ndmJ3yCu-Qt9tkEHC1LNlv3c6tD4SG7NFG4NtGvetog6uYeQcJonUmGmOhkjpCuUv1t9Zrd3cKpUbEmIQZNmvT3mq5i9FP5YUckmaf_1oBtk8Jn9LxLKKN3Wu9SA
+ export K8S_CLUSTER_API_TOKEN=eyJhbGciOiJSUzI1NiIsImtpZCI6IlNtdUNJdl9QWUtvMUpobU94VUtzNGtZZjYxVXd5TGFvVXlGZDZ6bV9nRFEifQ.eyJhdWQiOlsiaHR0cHM6Ly9rdWJlcm5ldGVzLmRlZmF1bHQuc3ZjLmNsdXN0ZXIubG9jYWwiXSwiZXhwIjoxNjk5NjMzODE2LCJpYXQiOjE2OTk2MzAyMTYsImlzcyI6Imh0dHBzOi8va3ViZXJuZXRlcy5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsIiwia3ViZXJuZXRlcy5pbyI6eyJuYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsInNlcnZpY2VhY2NvdW50Ijp7Im5hbWUiOiJhZG1pbi11c2VyIiwidWlkIjoiZGRiYmI0MzMtNTNmZS00MjBlLWIxY2QtOTE5YWQ2YTYzYzhhIn19LCJuYmYiOjE2OTk2MzAyMTYsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDprdWJlLXN5c3RlbTphZG1pbi11c2VyIn0.dYuG95DB3MzQCnOPKMt3VbY4ShzTRgv_58vddasOToVJA2k20aRgMnFLY2clMdW2U1AUvWzB6Ldy6RS1rg3Muq9NUsCV1s6MjS-K5LNGyVHC8yL8fpvhc8MwoQPTiRTybQX4DL5sfWoWj2NPQFkaMrvZ2M1VhLeh9Y3BlesmSjyQJFTOaMTfOTlyzF6mEJFpvNxHOqXIb5SUwZN6Kq70xZpDs-ndmJ3yCu-Qt9tkEHC1LNlv3c6tD4SG7NFG4NtGvetog6uYeQcJonUmGmOhkjpCuUv1t9Zrd3cKpUbEmIQZNmvT3mq5i9FP5YUckmaf_1oBtk8Jn9LxLKKN3Wu9SA
Executing the Kubernetes workload script /nfs/workloads/kind-slurm-integration/benchmark/ksi/workload-sysbench-diskseq.sh on cluster kind-6dbb1
+ K8S_CLUSTER_API_TOKEN=eyJhbGciOiJSUzI1NiIsImtpZCI6IlNtdUNJdl9QWUtvMUpobU94VUtzNGtZZjYxVXd5TGFvVXlGZDZ6bV9nRFEifQ.eyJhdWQiOlsiaHR0cHM6Ly9rdWJlcm5ldGVzLmRlZmF1bHQuc3ZjLmNsdXN0ZXIubG9jYWwiXSwiZXhwIjoxNjk5NjMzODE2LCJpYXQiOjE2OTk2MzAyMTYsImlzcyI6Imh0dHBzOi8va3ViZXJuZXRlcy5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsIiwia3ViZXJuZXRlcy5pbyI6eyJuYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsInNlcnZpY2VhY2NvdW50Ijp7Im5hbWUiOiJhZG1pbi11c2VyIiwidWlkIjoiZGRiYmI0MzMtNTNmZS00MjBlLWIxY2QtOTE5YWQ2YTYzYzhhIn19LCJuYmYiOjE2OTk2MzAyMTYsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDprdWJlLXN5c3RlbTphZG1pbi11c2VyIn0.dYuG95DB3MzQCnOPKMt3VbY4ShzTRgv_58vddasOToVJA2k20aRgMnFLY2clMdW2U1AUvWzB6Ldy6RS1rg3Muq9NUsCV1s6MjS-K5LNGyVHC8yL8fpvhc8MwoQPTiRTybQX4DL5sfWoWj2NPQFkaMrvZ2M1VhLeh9Y3BlesmSjyQJFTOaMTfOTlyzF6mEJFpvNxHOqXIb5SUwZN6Kq70xZpDs-ndmJ3yCu-Qt9tkEHC1LNlv3c6tD4SG7NFG4NtGvetog6uYeQcJonUmGmOhkjpCuUv1t9Zrd3cKpUbEmIQZNmvT3mq5i9FP5YUckmaf_1oBtk8Jn9LxLKKN3Wu9SA
+ echo 'Executing the Kubernetes workload script /nfs/workloads/kind-slurm-integration/benchmark/ksi/workload-sysbench-diskseq.sh on cluster kind-6dbb1'
+ wait
+ /bin/bash /nfs/workloads/kind-slurm-integration/benchmark/ksi/workload-sysbench-diskseq.sh
+ kubectl create --context kind-6dbb1 namespace bench
namespace/bench created
+ kubectl create -n bench --context kind-6dbb1 -f -
job.batch/sysbench created
+ kubectl wait --context kind-6dbb1 --for=condition=complete --timeout=10h job/sysbench -n bench
job.batch/sysbench condition met
+ kubectl logs job/sysbench -n bench --context kind-6dbb1
sysbench 1.0.20 (using bundled LuaJIT 2.1.0-beta2)

4 files, 262144Kb each, 1024Mb total
Creating files for the test...
Extra file open flags: (none)
Creating file test_file.0
Creating file test_file.1
Creating file test_file.2
Creating file test_file.3
1073741824 bytes written in 17.67 seconds (57.95 MiB/sec).
sysbench 1.0.20 (using bundled LuaJIT 2.1.0-beta2)

Running the test with following options:
Number of threads: 1
Initializing random number generator from current time


Extra file open flags: (none)
4 files, 256MiB each
1GiB total file size
Block size 16KiB
Periodic FSYNC enabled, calling fsync() each 100 requests.
Calling fsync() at the end of test, Enabled.
Using synchronous I/O mode
Doing sequential read test
Initializing worker threads...

Threads started!


File operations:
    reads/s:                      286831.06
    writes/s:                     0.00
    fsyncs/s:                     0.00

Throughput:
    read, MiB/s:                  4481.74
    written, MiB/s:               0.00

General statistics:
    total time:                          10.0001s
    total number of events:              2868912

Latency (ms):
         min:                                    0.00
         avg:                                    0.00
         max:                                    0.10
         95th percentile:                        0.00
         sum:                                 9513.91

Threads fairness:
    events (avg/stddev):           2868912.0000/0.00
    execution time (avg/stddev):   9.5139/0.00

sysbench 1.0.20 (using bundled LuaJIT 2.1.0-beta2)

Running the test with following options:
Number of threads: 1
Initializing random number generator from current time


Extra file open flags: (none)
4 files, 256MiB each
1GiB total file size
Block size 16KiB
Periodic FSYNC enabled, calling fsync() each 100 requests.
Calling fsync() at the end of test, Enabled.
Using synchronous I/O mode
Doing sequential write (creation) test
Initializing worker threads...

Threads started!


File operations:
    reads/s:                      0.00
    writes/s:                     8313.63
    fsyncs/s:                     332.74

Throughput:
    read, MiB/s:                  0.00
    written, MiB/s:               129.90

General statistics:
    total time:                          10.0058s
    total number of events:              86526

Latency (ms):
         min:                                    0.00
         avg:                                    0.12
         max:                                  147.14
         95th percentile:                        0.02
         sum:                                 9982.48

Threads fairness:
    events (avg/stddev):           86526.0000/0.00
    execution time (avg/stddev):   9.9825/0.00

sysbench 1.0.20 (using bundled LuaJIT 2.1.0-beta2)

Removing test files...
+ kubectl delete --context kind-6dbb1 namespace bench
namespace "bench" deleted
+ cleanup
+ echo 'Deleting Kind cluster container 6dbb1'
Deleting Kind cluster container 6dbb1
+ [[ CentOS Stream == \C\e\n\t\O\S\ \S\t\r\e\a\m ]]
+ [[ 9 = \8 ]]
+ KIND_EXPERIMENTAL_PROVIDER=podman
+ kind delete cluster --name 6dbb1
using podman due to KIND_EXPERIMENTAL_PROVIDER
enabling experimental podman provider
Deleting cluster "6dbb1" ...
Deleted nodes: ["6dbb1-control-plane"]
