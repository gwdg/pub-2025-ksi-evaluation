+ set -e
+ set -o pipefail
+ '[' -z /nfs/workloads/kind-slurm-integration/benchmark/ksi/workload-sysbench-diskseq.sh ']'
+ '[' '!' -f /nfs/workloads/kind-slurm-integration/benchmark/ksi/workload-sysbench-diskseq.sh ']'
++ stat -fc %T /sys/fs/cgroup/
+ '[' cgroup2fs = cgroup2fs ']'
+ echo 'cgroups v2 check passed: cgroups v2 is enabled'
cgroups v2 check passed: cgroups v2 is enabled
++ which podman
++ alias
++ eval declare -f
+++ declare -f
++ /usr/bin/which --tty-only --read-alias --read-functions --show-tilde --show-dot podman
+ '[' -x /usr/bin/podman ']'
podman check passed
+ echo 'podman check passed'
++ which kubectl
++ alias
++ eval declare -f
+++ declare -f
++ /usr/bin/which --tty-only --read-alias --read-functions --show-tilde --show-dot kubectl
+ '[' -x /usr/local/bin/kubectl ']'
kubectl check passed
+ echo 'kubectl check passed'
++ which kind
++ alias
++ eval declare -f
+++ declare -f
++ /usr/bin/which --tty-only --read-alias --read-functions --show-tilde --show-dot kind
+ '[' -x /usr/local/bin/kind ']'
kind check passed
+ echo 'kind check passed'
+ '[' -f /etc/os-release ']'
+ . /etc/os-release
++ NAME='CentOS Stream'
++ VERSION=9
++ ID=centos
++ ID_LIKE='rhel fedora'
++ VERSION_ID=9
++ PLATFORM_ID=platform:el9
++ PRETTY_NAME='CentOS Stream 9'
++ ANSI_COLOR='0;31'
++ LOGO=fedora-logo-icon
++ CPE_NAME=cpe:/o:centos:centos:9
++ HOME_URL=https://centos.org/
++ BUG_REPORT_URL=https://bugzilla.redhat.com/
++ REDHAT_SUPPORT_PRODUCT='Red Hat Enterprise Linux 9'
++ REDHAT_SUPPORT_PRODUCT_VERSION='CentOS Stream'
Successfully read /etc/os-release
+ echo 'Successfully read /etc/os-release'
++ uuidgen
++ tr -d -
++ head -c5
+ cluster_name=72cd4
++ random_unused_port
++ local port
++ (( port=30000 ))
++ (( port<=32767 ))
++ ss -Htan
++ awk '{print $4}'
++ cut -d: -f2
++ grep 30000
++ [[ 1 == 1 ]]
++ echo 30000
++ break
+ : 30000
+ export K8S_PORT=30000
+ K8S_PORT=30000
+ echo K8S_PORT=30000
K8S_PORT=30000
+ trap cleanup EXIT
+ trap cleanup SIGTERM
+ trap cleanup SIGINT
Kind config:
+ echo 'Kind config:'
+ envsubst
kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
nodes:
- role: control-plane
  extraMounts:
  - hostPath: ./
    containerPath: /app
  extraPortMappings:
    - containerPort: 30000
      hostPort: 30000
      # optional: set the bind address on the host
      # 0.0.0.0 is the current default
      listenAddress: "0.0.0.0"
      # optional: set the protocol to one of TCP, UDP, SCTP.
      # TCP is the default
      protocol: TCP
+ [[ CentOS Stream == \C\e\n\t\O\S\ \S\t\r\e\a\m ]]
+ [[ 9 = \8 ]]
+ envsubst
+ KIND_EXPERIMENTAL_PROVIDER=podman
+ kind create cluster --name 72cd4 --wait 5m --config -
using podman due to KIND_EXPERIMENTAL_PROVIDER
enabling experimental podman provider
Creating cluster "72cd4" ...
 • Ensuring node image (kindest/node:v1.27.3) 🖼  ...
 ✓ Ensuring node image (kindest/node:v1.27.3) 🖼
 • Preparing nodes 📦   ...
 ✓ Preparing nodes 📦 
 • Writing configuration 📜  ...
 ✓ Writing configuration 📜
 • Starting control-plane 🕹️  ...
 ✓ Starting control-plane 🕹️
 • Installing CNI 🔌  ...
 ✓ Installing CNI 🔌
 • Installing StorageClass 💾  ...
 ✓ Installing StorageClass 💾
 • Waiting ≤ 5m0s for control-plane = Ready ⏳  ...
 ✓ Waiting ≤ 5m0s for control-plane = Ready ⏳
 • Ready after 13s 💚
Set kubectl context to "kind-72cd4"
You can now use your cluster with:

kubectl cluster-info --context kind-72cd4

Thanks for using kind! 😊
+ kubectl get nodes --context kind-72cd4
NAME                  STATUS   ROLES           AGE   VERSION
72cd4-control-plane   Ready    control-plane   18s   v1.27.3
+ kubectl cluster-info --context kind-72cd4
[0;32mKubernetes control plane[0m is running at [0;33mhttps://127.0.0.1:40001[0m
[0;32mCoreDNS[0m is running at [0;33mhttps://127.0.0.1:40001/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy[0m

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
+ K8S_CLUSTER_NAME=kind-72cd4
+ export K8S_CLUSTER_NAME=kind-72cd4
+ K8S_CLUSTER_NAME=kind-72cd4
++ kubectl config view -o 'jsonpath={.clusters[?(@.name=='\''kind-72cd4'\'')].cluster.server}'
+ K8S_CLUSTER_API=https://127.0.0.1:40001
+ export K8S_CLUSTER_API=https://127.0.0.1:40001
+ K8S_CLUSTER_API=https://127.0.0.1:40001
+ kubectl --context kind-72cd4 create -f -
serviceaccount/admin-user created
+ kubectl --context kind-72cd4 create -f -
clusterrolebinding.rbac.authorization.k8s.io/admin-user created
++ kubectl --context kind-72cd4 -n kube-system create token admin-user
+ K8S_CLUSTER_API_TOKEN=eyJhbGciOiJSUzI1NiIsImtpZCI6ImdoaVBKOUY0R015dW4yQ1BKLXFaVU5XU0czUjB6ckJkaVNVd0NNeEtOTGcifQ.eyJhdWQiOlsiaHR0cHM6Ly9rdWJlcm5ldGVzLmRlZmF1bHQuc3ZjLmNsdXN0ZXIubG9jYWwiXSwiZXhwIjoxNjk5OTkyOTEwLCJpYXQiOjE2OTk5ODkzMTAsImlzcyI6Imh0dHBzOi8va3ViZXJuZXRlcy5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsIiwia3ViZXJuZXRlcy5pbyI6eyJuYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsInNlcnZpY2VhY2NvdW50Ijp7Im5hbWUiOiJhZG1pbi11c2VyIiwidWlkIjoiZDlkN2ExYzMtNTRmMC00MWVhLThjMWQtMDM2ZTgzMzQwNDg4In19LCJuYmYiOjE2OTk5ODkzMTAsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDprdWJlLXN5c3RlbTphZG1pbi11c2VyIn0.W0HpkRaCYBd62TTnUDjlUmaKCf8nfyFI3lFXhEFY49kyUCDMtCKrZoAaSG7gDAV2ieMNR5oE3stfpEyZFTqUIWcIO6tbUR9GReG8_qQHKgHCQvhfp7s8QbipLrWzhDOofGwz353uUCw-3VV-rue89M8Zy3qgpv2appKUYI_5ZRvcp3EkPlz2r7AmWNzxopIiSHQaLaVdDNa2wR1T-6oPeMVNRhT2IwxDjujQAiQWimLgsp9-O76bS6Gdx43gcjCOhmLmA2trOIzW2OL4mRqZJfKAxtlJ0VvYC388-6xesGuPCcCi1875uHm_76MuBs9wPp8VgM2u0pfz60XXmx9UFA
+ export K8S_CLUSTER_API_TOKEN=eyJhbGciOiJSUzI1NiIsImtpZCI6ImdoaVBKOUY0R015dW4yQ1BKLXFaVU5XU0czUjB6ckJkaVNVd0NNeEtOTGcifQ.eyJhdWQiOlsiaHR0cHM6Ly9rdWJlcm5ldGVzLmRlZmF1bHQuc3ZjLmNsdXN0ZXIubG9jYWwiXSwiZXhwIjoxNjk5OTkyOTEwLCJpYXQiOjE2OTk5ODkzMTAsImlzcyI6Imh0dHBzOi8va3ViZXJuZXRlcy5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsIiwia3ViZXJuZXRlcy5pbyI6eyJuYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsInNlcnZpY2VhY2NvdW50Ijp7Im5hbWUiOiJhZG1pbi11c2VyIiwidWlkIjoiZDlkN2ExYzMtNTRmMC00MWVhLThjMWQtMDM2ZTgzMzQwNDg4In19LCJuYmYiOjE2OTk5ODkzMTAsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDprdWJlLXN5c3RlbTphZG1pbi11c2VyIn0.W0HpkRaCYBd62TTnUDjlUmaKCf8nfyFI3lFXhEFY49kyUCDMtCKrZoAaSG7gDAV2ieMNR5oE3stfpEyZFTqUIWcIO6tbUR9GReG8_qQHKgHCQvhfp7s8QbipLrWzhDOofGwz353uUCw-3VV-rue89M8Zy3qgpv2appKUYI_5ZRvcp3EkPlz2r7AmWNzxopIiSHQaLaVdDNa2wR1T-6oPeMVNRhT2IwxDjujQAiQWimLgsp9-O76bS6Gdx43gcjCOhmLmA2trOIzW2OL4mRqZJfKAxtlJ0VvYC388-6xesGuPCcCi1875uHm_76MuBs9wPp8VgM2u0pfz60XXmx9UFA
+ K8S_CLUSTER_API_TOKEN=eyJhbGciOiJSUzI1NiIsImtpZCI6ImdoaVBKOUY0R015dW4yQ1BKLXFaVU5XU0czUjB6ckJkaVNVd0NNeEtOTGcifQ.eyJhdWQiOlsiaHR0cHM6Ly9rdWJlcm5ldGVzLmRlZmF1bHQuc3ZjLmNsdXN0ZXIubG9jYWwiXSwiZXhwIjoxNjk5OTkyOTEwLCJpYXQiOjE2OTk5ODkzMTAsImlzcyI6Imh0dHBzOi8va3ViZXJuZXRlcy5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsIiwia3ViZXJuZXRlcy5pbyI6eyJuYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsInNlcnZpY2VhY2NvdW50Ijp7Im5hbWUiOiJhZG1pbi11c2VyIiwidWlkIjoiZDlkN2ExYzMtNTRmMC00MWVhLThjMWQtMDM2ZTgzMzQwNDg4In19LCJuYmYiOjE2OTk5ODkzMTAsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDprdWJlLXN5c3RlbTphZG1pbi11c2VyIn0.W0HpkRaCYBd62TTnUDjlUmaKCf8nfyFI3lFXhEFY49kyUCDMtCKrZoAaSG7gDAV2ieMNR5oE3stfpEyZFTqUIWcIO6tbUR9GReG8_qQHKgHCQvhfp7s8QbipLrWzhDOofGwz353uUCw-3VV-rue89M8Zy3qgpv2appKUYI_5ZRvcp3EkPlz2r7AmWNzxopIiSHQaLaVdDNa2wR1T-6oPeMVNRhT2IwxDjujQAiQWimLgsp9-O76bS6Gdx43gcjCOhmLmA2trOIzW2OL4mRqZJfKAxtlJ0VvYC388-6xesGuPCcCi1875uHm_76MuBs9wPp8VgM2u0pfz60XXmx9UFA
Executing the Kubernetes workload script /nfs/workloads/kind-slurm-integration/benchmark/ksi/workload-sysbench-diskseq.sh on cluster kind-72cd4
+ echo 'Executing the Kubernetes workload script /nfs/workloads/kind-slurm-integration/benchmark/ksi/workload-sysbench-diskseq.sh on cluster kind-72cd4'
+ wait
+ /bin/bash /nfs/workloads/kind-slurm-integration/benchmark/ksi/workload-sysbench-diskseq.sh
+ kubectl create --context kind-72cd4 namespace bench
namespace/bench created
+ kubectl create -n bench --context kind-72cd4 -f -
job.batch/sysbench created
+ kubectl wait --context kind-72cd4 --for=condition=complete --timeout=10h job/sysbench -n bench
job.batch/sysbench condition met
+ kubectl logs job/sysbench -n bench --context kind-72cd4
sysbench 1.0.20 (using bundled LuaJIT 2.1.0-beta2)

128 files, 8192Kb each, 1024Mb total
Creating files for the test...
Extra file open flags: (none)
Creating file test_file.0
Creating file test_file.1
Creating file test_file.2
Creating file test_file.3
Creating file test_file.4
Creating file test_file.5
Creating file test_file.6
Creating file test_file.7
Creating file test_file.8
Creating file test_file.9
Creating file test_file.10
Creating file test_file.11
Creating file test_file.12
Creating file test_file.13
Creating file test_file.14
Creating file test_file.15
Creating file test_file.16
Creating file test_file.17
Creating file test_file.18
Creating file test_file.19
Creating file test_file.20
Creating file test_file.21
Creating file test_file.22
Creating file test_file.23
Creating file test_file.24
Creating file test_file.25
Creating file test_file.26
Creating file test_file.27
Creating file test_file.28
Creating file test_file.29
Creating file test_file.30
Creating file test_file.31
Creating file test_file.32
Creating file test_file.33
Creating file test_file.34
Creating file test_file.35
Creating file test_file.36
Creating file test_file.37
Creating file test_file.38
Creating file test_file.39
Creating file test_file.40
Creating file test_file.41
Creating file test_file.42
Creating file test_file.43
Creating file test_file.44
Creating file test_file.45
Creating file test_file.46
Creating file test_file.47
Creating file test_file.48
Creating file test_file.49
Creating file test_file.50
Creating file test_file.51
Creating file test_file.52
Creating file test_file.53
Creating file test_file.54
Creating file test_file.55
Creating file test_file.56
Creating file test_file.57
Creating file test_file.58
Creating file test_file.59
Creating file test_file.60
Creating file test_file.61
Creating file test_file.62
Creating file test_file.63
Creating file test_file.64
Creating file test_file.65
Creating file test_file.66
Creating file test_file.67
Creating file test_file.68
Creating file test_file.69
Creating file test_file.70
Creating file test_file.71
Creating file test_file.72
Creating file test_file.73
Creating file test_file.74
Creating file test_file.75
Creating file test_file.76
Creating file test_file.77
Creating file test_file.78
Creating file test_file.79
Creating file test_file.80
Creating file test_file.81
Creating file test_file.82
Creating file test_file.83
Creating file test_file.84
Creating file test_file.85
Creating file test_file.86
Creating file test_file.87
Creating file test_file.88
Creating file test_file.89
Creating file test_file.90
Creating file test_file.91
Creating file test_file.92
Creating file test_file.93
Creating file test_file.94
Creating file test_file.95
Creating file test_file.96
Creating file test_file.97
Creating file test_file.98
Creating file test_file.99
Creating file test_file.100
Creating file test_file.101
Creating file test_file.102
Creating file test_file.103
Creating file test_file.104
Creating file test_file.105
Creating file test_file.106
Creating file test_file.107
Creating file test_file.108
Creating file test_file.109
Creating file test_file.110
Creating file test_file.111
Creating file test_file.112
Creating file test_file.113
Creating file test_file.114
Creating file test_file.115
Creating file test_file.116
Creating file test_file.117
Creating file test_file.118
Creating file test_file.119
Creating file test_file.120
Creating file test_file.121
Creating file test_file.122
Creating file test_file.123
Creating file test_file.124
Creating file test_file.125
Creating file test_file.126
Creating file test_file.127
1073741824 bytes written in 13.16 seconds (77.79 MiB/sec).
sysbench 1.0.20 (using bundled LuaJIT 2.1.0-beta2)

Running the test with following options:
Number of threads: 1
Initializing random number generator from current time


Extra file open flags: directio
128 files, 8MiB each
1GiB total file size
Block size 256KiB
Periodic FSYNC enabled, calling fsync() each 100 requests.
Calling fsync() at the end of test, Enabled.
Using synchronous I/O mode
Doing sequential read test
Initializing worker threads...

Threads started!


File operations:
    reads/s:                      1386.13
    writes/s:                     0.00
    fsyncs/s:                     0.00

Throughput:
    read, MiB/s:                  346.53
    written, MiB/s:               0.00

General statistics:
    total time:                          10.0374s
    total number of events:              13916

Latency (ms):
         min:                                    0.48
         avg:                                    0.72
         max:                                  206.54
         95th percentile:                        0.68
         sum:                                10025.72

Threads fairness:
    events (avg/stddev):           13916.0000/0.00
    execution time (avg/stddev):   10.0257/0.00

sysbench 1.0.20 (using bundled LuaJIT 2.1.0-beta2)

Running the test with following options:
Number of threads: 1
Initializing random number generator from current time


Extra file open flags: directio
128 files, 8MiB each
1GiB total file size
Block size 256KiB
Periodic FSYNC enabled, calling fsync() each 100 requests.
Calling fsync() at the end of test, Enabled.
Using synchronous I/O mode
Doing sequential write (creation) test
Initializing worker threads...

Threads started!


File operations:
    reads/s:                      0.00
    writes/s:                     504.80
    fsyncs/s:                     658.42

Throughput:
    read, MiB/s:                  0.00
    written, MiB/s:               126.20

General statistics:
    total time:                          10.1072s
    total number of events:              11631

Latency (ms):
         min:                                    0.08
         avg:                                    0.86
         max:                                  309.34
         95th percentile:                        0.84
         sum:                                10008.80

Threads fairness:
    events (avg/stddev):           11631.0000/0.00
    execution time (avg/stddev):   10.0088/0.00

sysbench 1.0.20 (using bundled LuaJIT 2.1.0-beta2)

Removing test files...
+ kubectl delete --context kind-72cd4 namespace bench
namespace "bench" deleted
+ cleanup
+ echo 'Deleting Kind cluster container 72cd4'
Deleting Kind cluster container 72cd4
+ [[ CentOS Stream == \C\e\n\t\O\S\ \S\t\r\e\a\m ]]
+ [[ 9 = \8 ]]
+ KIND_EXPERIMENTAL_PROVIDER=podman
+ kind delete cluster --name 72cd4
using podman due to KIND_EXPERIMENTAL_PROVIDER
enabling experimental podman provider
Deleting cluster "72cd4" ...
Deleted nodes: ["72cd4-control-plane"]
